name: CI

on:
  push:
    branches: [ "main" ]
    paths-ignore:
      - '**.md'
      - 'docs/**'
  pull_request:
    branches: [ "main" ]
    paths-ignore:
      - '**.md'
      - 'docs/**'

jobs:
  flutter_test:
    name: Run Flutter Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.3'
          channel: 'stable'
          cache: true
      
      - name: Install dependencies
        run: flutter pub get
      
      - name: Run analyzer
        run: flutter analyze --no-fatal-infos
      
      - name: Run tests
        run: flutter test

  build_rust_bridge:
    name: Build Rust Bridge
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy, rustfmt
      
      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: "rust -> target, rust_bridge -> target"
      
      - name: Run clippy with warnings as errors
        working-directory: ./rust
        run: cargo clippy --all-targets --all-features -- -D warnings
      
      - name: Check formatting
        working-directory: ./rust
        run: cargo fmt --all -- --check
      
      - name: Build rust bridge
        run: ./build_rust_bridge.sh

  build_flutter_app:
    name: Build Flutter App
    needs: [flutter_test, build_rust_bridge]
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux
            build_command: "flutter build linux --release"
            output_path: "build/linux/x64/release/bundle"
          - os: windows-latest
            platform: windows
            build_command: "flutter build windows --release"
            output_path: "build/windows/runner/Release"
          - os: macos-latest
            platform: macos
            build_command: "flutter build macos --release --no-codesign"
            output_path: "build/macos/Build/Products/Release/rcp_client.app"
    
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.3'
          channel: 'stable'
          cache: true
      
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy, rustfmt
      
      # Platform-specific setup
      - name: Install Linux dependencies
        if: matrix.platform == 'linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libblkid-dev liblzma-dev libsecret-1-dev libjsoncpp-dev libsqlite3-dev pkg-config ninja-build clang cmake
      
      - name: Install Flutter dependencies
        run: flutter pub get
      
      # Build platform-specific
      - name: Build Flutter App
        run: ${{ matrix.build_command }}
      
      # Upload artifacts
      - name: Upload App
        uses: actions/upload-artifact@v3
        with:
          name: rcp-client-${{ matrix.platform }}
          path: ${{ matrix.output_path }}
          retention-days: 7 # Keep for shorter time in CI builds
