{"$message_type":"diagnostic","message":"empty line after doc comment","code":{"code":"clippy::empty_line_after_doc_comments","explanation":null},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":528,"byte_end":570,"line_start":15,"line_end":15,"column_start":1,"column_end":43,"is_primary":false,"text":[{"text":"pub unsafe extern \"C\" fn connect_to_server(","highlight_start":1,"highlight_end":43}],"label":"the comment documents this function","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":174,"byte_end":339,"line_start":6,"line_end":9,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"/// from the Flutter application through Dart's FFI capabilities.","highlight_start":1,"highlight_end":66},{"text":"// TODO: Add actual imports to RCP client libraries","highlight_start":1,"highlight_end":52},{"text":"// use rcp_client::{ClientBuilder, RcpClient};","highlight_start":1,"highlight_end":47},{"text":"","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#empty_line_after_doc_comments","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`-D clippy::empty-line-after-doc-comments` implied by `-D warnings`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to override `-D warnings` add `#[allow(clippy::empty_line_after_doc_comments)]`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"if the empty line is unintentional, remove it","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":338,"byte_end":339,"line_start":8,"line_end":9,"column_start":47,"column_end":1,"is_primary":true,"text":[{"text":"// use rcp_client::{ClientBuilder, RcpClient};","highlight_start":47,"highlight_end":47},{"text":"","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if the doc comment should not document `connect_to_server` comment it out","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":31,"byte_end":31,"line_start":3,"line_end":3,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"/// Bridge module for FFI between Flutter and RCP client","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"// ","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/lib.rs","byte_start":88,"byte_end":88,"line_start":4,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"/// ","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"// ","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/lib.rs","byte_start":93,"byte_end":93,"line_start":5,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"/// This module provides FFI functions to interact with the RCP client libraries","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"// ","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/lib.rs","byte_start":174,"byte_end":174,"line_start":6,"line_end":6,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"/// from the Flutter application through Dart's FFI capabilities.","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"// ","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: empty line after doc comment\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:6:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m/// from the Flutter application through Dart's FFI capabilities.\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0mpub unsafe extern \"C\" fn connect_to_server(\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mthe comment documents this function\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#empty_line_after_doc_comments\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `-D clippy::empty-line-after-doc-comments` implied by `-D warnings`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: to override `-D warnings` add `#[allow(clippy::empty_line_after_doc_comments)]`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: \u001b[0m\u001b[0mif the empty line is unintentional, remove it\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if the doc comment should not document `connect_to_server` comment it out\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m~ // \u001b[0m\u001b[0m/// Bridge module for FFI between Flutter and RCP client\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m~ // \u001b[0m\u001b[0m/// \u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m~ // \u001b[0m\u001b[0m/// This module provides FFI functions to interact with the RCP client libraries\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m~ // \u001b[0m\u001b[0m/// from the Flutter application through Dart's FFI capabilities.\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"aborting due to 1 previous error","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 1 previous error\u001b[0m\n\n"}
